FLYWEIGHT
Use sharing to support large numbers of fine-grained objects efficiently.A flyweight is a shared object that can be used in multiple contexts simultaneously

- Flyweight (MyShape) declares an interface through which flyweights can receive and act on extrinsic state.
- ConcreteFlyweight (MyRecangle) implements the Flyweight interface and adds storage for intrinsic
    state, if any. A ConcreteFlyweight object must be sharable. Any state
    it stores must be intrinsic; that is, it must be independent of the ConcreteFlyweight object's context.
- UnsharedConcreteFlyweight (parameters from the draw() from Shape)  not all Flyweight subclasses need to be shared. The Flyweight
    interface enables sharing; it doesn't enforce it. It's common for
    UnsharedConcreteFlyweight objects to have ConcreteFlyweight
    objects as children at some level in the flyweight object structure

- FlyweightFactory (ShapeFactory) creates and manages flyweight objects. Ensures that flyweights are shared properly. When a client requests a flyweight, the FlyweightFactory object supplies an existing
instance or creates one, if none exists.
- Client (TestFlyweight) - maintains a reference to flyweight(s).Computes or stores the extrinsic state of flyweight

Intristic behavior - to ConcreteFlyweight
Extrinstic - is stored or computed by Client

Uses:
The Flyweight pattern is often combined with the Composite using sharing leaf nodes

